@page "/"
@inject IStorageRepository _context
<main>
    <style>
        main {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f9f9f9;
        }
        table {
            border-collapse: collapse;
            width: 80%;
            text-align: center;
            background: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }
        th, td {
            padding: 12px 20px;
            border: 1px solid #ddd;
        }
        th {
            background-color: #007bff;
            color: #fff;
            font-weight: bold;
        }
        td {
            color: #333;
        }
        tbody tr:nth-child(odd) {
            background-color: #f2f2f2;
        }
    </style>
    <table>
        <thead>
            <tr>
                <th scope="col">Номер склада</th>
                <th scope="col">Номер площадки</th>
                <th scope="col">Номер Пикета</th>
                <th scope="col">Груз на площадке(т)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var storage in Storages ?? Enumerable.Empty<MainStorage>())
            {
                if (storage != null)
                {
                    <tr>
                        <td>@(storage.StorageName ?? "N/A")</td>
                        <td>@(storage.Pickets?.Select(a => a.AreaPicket.Load).FirstOrDefault().ToString() ?? "N/A")</td>
                        <td>@(storage.Areas?.FirstOrDefault()?.ToString() ?? "N/A")</td>
                        <td>@(storage.Areas?.Select(a => a.MainStorageId == storage.Id).ToString())</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</main>

@code {
    public List<MainStorage> Storages;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Storages = await _context.GetAllStoragesAsync() ?? new List<MainStorage>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading storages: {ex.Message}");
            Storages = new List<MainStorage>();

        }
    }
}
